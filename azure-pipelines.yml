# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml



#trigger:
#  - master

jobs:
  - job: "Ubuntu_1804_Apt_Makefile_Test"
    pool:
      vmImage: "ubuntu-18.04"
    steps:
      - script: ./prep-env.sh
        displayName: 'prepare env'
      - script: python ./run-test.py
        displayName: 'run unit test'

  - job: "sonar_scan"
    pool:
      vmImage: "ubuntu-18.04"
    steps:
      - script: ./prep-env.sh
        displayName: 'prepare env'
      - script: bash ./sonar-check.sh
        displayName: 'sonar scan'

  - template: azure-devops/build-ubuntu-vcpkg.yml
    parameters:
      name: 'Ubuntu_1604_Vcpkg'
      image: 'Ubuntu 18.04'


  - job: MacOS_Vcpkg
    pool:
        vmImage: 'macOS-latest'
    steps:
        - script: git submodule update --init vcpkg
          displayName: Checkout vcpkg submodule
        - script: |
            ./vcpkg/bootstrap-vcpkg.sh
            ./vcpkg/vcpkg integrate install
            ./vcpkg/vcpkg install gtest jsoncpp boost-tti boost-any boost-date-time --vcpkg-root ./vcpkg
          displayName: Vcpkg install dependencies
        - script: |
            mkdir build.debug
          displayName: Make Build Directories
        - task: CMake@1
          inputs:
            workingDirectory: 'build.debug'
            cmakeArgs: '-DCMAKE_BUILD_TYPE=Debug -DCMAKE_TOOLCHAIN_FILE=../vcpkg/scripts/buildsystems/vcpkg.cmake ..'
        - script: |
            cd build.debug
            make && cd  ../test/ &&   ../build.debug/cppbind_test
          displayName: 'Run Unit Test'
